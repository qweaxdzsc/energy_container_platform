#!/usr/bin/env python

###
### This file is generated automatically by SALOME v9.10.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
import salome_notebook
notebook = salome_notebook.NoteBook()
sys.path.insert(0, r'E:/project_simulation/energy_container/container_V1/cell_simple_V1')

###
### GEOM component
###

import GEOM
from salome.geom import geomBuilder
import math
import SALOMEDS

for i in range(collapse_iter):
  coincident_nodes_on_part = Mesh_All.FindCoincidentNodesOnPart([bad_face_group], merge_tolerance, [], 0)
  # MergeNodes to collapse bad face
  while merge_tolerance < merge_max_tolerance:
    if len(coincident_nodes_on_part) == 0:
      merge_tolerance *= 1.5
      coincident_nodes_on_part = Mesh_All.FindCoincidentNodesOnPart([bad_face_group], merge_tolerance, [], 0)
  if len(coincident_nodes_on_part) > 0:
    Mesh_All.MergeNodes(coincident_nodes_on_part, [], 1)
    bad_face_nodes = bad_face_group.GetNumberOfNodes()
  if bad_face_nodes == 0:
    break

geompy = geomBuilder.New()

O = geompy.MakeVertex(0, 0, 0)
OX = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ = geompy.MakeVectorDXDYDZ(0, 0, 1)
pack_simple5 = geompy.ImportSTEP("E:/test/energy_container_test/true_model_V1/PACK/pack_simple5.stp", True, True)
[duanban,yelengban,cell,fluid,guoliuyuanjian] = geompy.ExtractShapes(pack_simple5, geompy.ShapeType["COMPOUND"], True)
[geomObj_1,geomObj_2] = geompy.SubShapes(pack_simple5, [5457, 5641])
[geomObj_3,geomObj_4] = geompy.SubShapes(pack_simple5, [5480, 5579])
[cell1,cell2] = geompy.ExtractShapes(cell, geompy.ShapeType["SOLID"], True)
inlet = geompy.CreateGroup(pack_simple5, geompy.ShapeType["FACE"])
geompy.UnionIDs(inlet, [1534])
outlet = geompy.CreateGroup(pack_simple5, geompy.ShapeType["FACE"])
geompy.UnionIDs(outlet, [1429])
interface_duanban_cell = geompy.CreateGroup(duanban, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_duanban_cell, [3425])
interface_cell_duanban = geompy.CreateGroup(pack_simple5, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_cell_duanban, [5656])
interface_cell1_cell2 = geompy.CreateGroup(pack_simple5, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_cell1_cell2, [5610])
interface_cell2_cell1 = geompy.CreateGroup(pack_simple5, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_cell2_cell1, [5514])
interface_bar1_cell = geompy.CreateGroup(pack_simple5, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_bar1_cell, [5457])
interface_cell1_bar1 = geompy.CreateGroup(pack_simple5, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_cell1_bar1, [5654])
interface_cell2_bar1 = geompy.CreateGroup(pack_simple5, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_cell2_bar1, [5538])
interface_plate_cell = geompy.CreateGroup(pack_simple5, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_plate_cell, [769])
interface_cell1_plate = geompy.CreateGroup(pack_simple5, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_cell1_plate, [5606])
interface_cell2_plate = geompy.CreateGroup(pack_simple5, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_cell2_plate, [5510])
[duanban, yelengban, cell, fluid, guoliuyuanjian, geomObj_1, geomObj_2, geomObj_3, geomObj_4, inlet, outlet, interface_cell_duanban, interface_cell1_cell2, interface_cell2_cell1, interface_bar1_cell, interface_cell1_bar1, interface_cell2_bar1, interface_plate_cell, interface_cell1_plate, interface_cell2_plate] = geompy.GetExistingSubObjects(pack_simple5, False)
interface_fluid_platete = geompy.CreateGroup(fluid, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_fluid_platete, [356, 261, 33, 421, 412, 162, 365, 43, 311, 189, 65, 418, 125, 339, 402, 4, 152, 358, 194, 400, 176, 318, 203, 329, 391, 23, 14, 439, 228, 434, 55, 221, 238, 407, 346, 105, 415, 95, 332, 383, 142, 245, 252, 386, 258, 376, 396, 181, 115, 275, 169, 268, 283, 372, 426, 184, 423, 217, 431, 288, 210, 299, 294, 225, 304, 85, 75, 231, 256])
interface_plate_fluid = geompy.CreateGroup(yelengban, geompy.ShapeType["FACE"])
geompy.UnionIDs(interface_plate_fluid, [213, 279, 1179, 291, 284, 1165, 1034, 298, 1123, 1107, 199, 1168, 220, 310, 303, 1112, 110, 313, 237, 316, 1029, 265, 935, 1157, 871, 120, 940, 994, 189, 958, 1162, 152, 798, 1174, 80, 182, 172, 1120, 1115, 953, 232, 989, 1147, 253, 227, 1136, 876, 247, 1133, 1152, 1128, 162, 142, 1139, 271, 1144, 90, 260, 1055, 276, 100, 1171, 130, 840, 1176, 206, 801])
geompy.addToStudy( O, 'O' )
geompy.addToStudy( OX, 'OX' )
geompy.addToStudy( OY, 'OY' )
geompy.addToStudy( OZ, 'OZ' )
geompy.addToStudy( pack_simple5, 'pack_simple5' )
geompy.addToStudyInFather( pack_simple5, duanban, 'duanban' )
geompy.addToStudyInFather( pack_simple5, yelengban, 'yelengban' )
geompy.addToStudyInFather( pack_simple5, cell, 'cell' )
geompy.addToStudyInFather( pack_simple5, fluid, 'fluid' )
geompy.addToStudyInFather( pack_simple5, guoliuyuanjian, 'guoliuyuanjian' )
geompy.addToStudyInFather( pack_simple5, inlet, 'inlet' )
geompy.addToStudyInFather( pack_simple5, outlet, 'outlet' )
geompy.addToStudyInFather( duanban, interface_duanban_cell, 'interface_duanban_cell' )
geompy.addToStudyInFather( pack_simple5, interface_cell_duanban, 'interface_cell_duanban' )
geompy.addToStudyInFather( pack_simple5, interface_cell1_cell2, 'interface_cell1_cell2' )
geompy.addToStudyInFather( pack_simple5, interface_cell2_cell1, 'interface_cell2_cell1' )
geompy.addToStudyInFather( pack_simple5, interface_bar1_cell, 'interface_bar1_cell' )
geompy.addToStudyInFather( pack_simple5, interface_cell1_bar1, 'interface_cell1_bar1' )
geompy.addToStudyInFather( pack_simple5, interface_cell2_bar1, 'interface_cell2_bar1' )
geompy.addToStudyInFather( pack_simple5, interface_plate_cell, 'interface_plate_cell' )
geompy.addToStudyInFather( pack_simple5, interface_cell1_plate, 'interface_cell1_plate' )
geompy.addToStudyInFather( pack_simple5, interface_cell2_plate, 'interface_cell2_plate' )
geompy.addToStudyInFather( fluid, interface_fluid_platete, 'interface_fluid_platete' )
geompy.addToStudyInFather( yelengban, interface_plate_fluid, 'interface_plate_fluid' )
geompy.addToStudyInFather( cell, cell1, 'cell1' )
geompy.addToStudyInFather( cell, cell2, 'cell2' )

###
### SMESH component
###

import  SMESH, SALOMEDS
from salome.smesh import smeshBuilder

smesh = smeshBuilder.New()
#smesh.SetEnablePublish( False ) # Set to False to avoid publish in study if not needed or in some particular situations:
                                 # multiples meshes built in parallel, complex and numerous mesh edition (performance)

aFilterManager = smesh.CreateFilterManager()
Mesh_1 = smesh.Mesh(pack_simple5,'Mesh_1')
duanban_1 = Mesh_1.GroupOnGeom(duanban,'duanban',SMESH.VOLUME)
yelengban_1 = Mesh_1.GroupOnGeom(yelengban,'yelengban',SMESH.VOLUME)
fluid_1 = Mesh_1.GroupOnGeom(fluid,'fluid',SMESH.VOLUME)
guoliuyuanjian_1 = Mesh_1.GroupOnGeom(guoliuyuanjian,'guoliuyuanjian',SMESH.VOLUME)
inlet_1 = Mesh_1.GroupOnGeom(inlet,'inlet',SMESH.FACE)
outlet_1 = Mesh_1.GroupOnGeom(outlet,'outlet',SMESH.FACE)
interface_cell_duanban_1 = Mesh_1.GroupOnGeom(interface_cell_duanban,'interface_cell_duanban',SMESH.FACE)
interface_cell1_cell2_1 = Mesh_1.GroupOnGeom(interface_cell1_cell2,'interface_cell1_cell2',SMESH.FACE)
interface_bar1_cell_1 = Mesh_1.GroupOnGeom(interface_bar1_cell,'interface_bar1_cell',SMESH.FACE)
interface_cell1_bar1_1 = Mesh_1.GroupOnGeom(interface_cell1_bar1,'interface_cell1_bar1',SMESH.FACE)
interface_cell2_bar1_1 = Mesh_1.GroupOnGeom(interface_cell2_bar1,'interface_cell2_bar1',SMESH.FACE)
interface_plate_cell_1 = Mesh_1.GroupOnGeom(interface_plate_cell,'interface_plate_cell',SMESH.FACE)
interface_cell1_plate_1 = Mesh_1.GroupOnGeom(interface_cell1_plate,'interface_cell1_plate',SMESH.FACE)
interface_cell2_plate_1 = Mesh_1.GroupOnGeom(interface_cell2_plate,'interface_cell2_plate',SMESH.FACE)

# duanban
NETGEN_1D_2D_3D = Mesh_1.Tetrahedron(algo=smeshBuilder.NETGEN_1D2D3D, geom=duanban)
NETGEN_3D_Parameters_1 = NETGEN_1D_2D_3D.Parameters()
NETGEN_3D_Parameters_1.SetSecondOrder( 0 )
NETGEN_3D_Parameters_1.SetOptimize( 1 )
NETGEN_3D_Parameters_1.SetFineness( 5 )
NETGEN_3D_Parameters_1.SetNbSegPerEdge( 1 )
NETGEN_3D_Parameters_1.SetNbSegPerRadius( 4 )
NETGEN_3D_Parameters_1.SetChordalError( -1 )
NETGEN_3D_Parameters_1.SetChordalErrorEnabled( 0 )
NETGEN_3D_Parameters_1.SetUseSurfaceCurvature( 1 )
NETGEN_3D_Parameters_1.SetFuseEdges( 1 )
NETGEN_3D_Parameters_1.SetQuadAllowed( 0 )
NETGEN_3D_Parameters_1.SetGrowthRate( 0.25 )
NETGEN_3D_Parameters_1.SetMaxSize( 10 )
NETGEN_3D_Parameters_1.SetMinSize( 5 )
NETGEN_3D_Parameters_1.SetCheckChartBoundary( 96 )
isDone = Mesh_1.Compute()

mesh_editor_0 = Mesh_1.GetMeshEditor()
NETGEN_3D_Parameters_1.SetGrowthRate( 0.15 )
NETGEN_3D_Parameters_1.SetCheckChartBoundary( 96 )
status = Mesh_1.RemoveHypothesis(NETGEN_1D_2D_3D,duanban)

NETGEN_1D_2D = Mesh_1.Triangle(algo=smeshBuilder.NETGEN_1D2D,geom=duanban)
NETGEN_2D_Parameters_1 = NETGEN_1D_2D.Parameters()
NETGEN_2D_Parameters_1.SetMaxSize( 8 )
NETGEN_2D_Parameters_1.SetMinSize( 4 )
NETGEN_2D_Parameters_1.SetSecondOrder( 0 )
NETGEN_2D_Parameters_1.SetOptimize( 1 )
NETGEN_2D_Parameters_1.SetFineness( 5 )
NETGEN_2D_Parameters_1.SetGrowthRate( 0.1 )
NETGEN_2D_Parameters_1.SetNbSegPerEdge( 1 )
NETGEN_2D_Parameters_1.SetNbSegPerRadius( 4 )
NETGEN_2D_Parameters_1.SetChordalError( -1 )
NETGEN_2D_Parameters_1.SetChordalErrorEnabled( 0 )
NETGEN_2D_Parameters_1.SetUseSurfaceCurvature( 1 )
NETGEN_2D_Parameters_1.SetFuseEdges( 1 )
NETGEN_2D_Parameters_1.SetUseDelauney( 0 )
NETGEN_2D_Parameters_1.SetQuadAllowed( 0 )
NETGEN_2D_Parameters_1.SetWorstElemMeasure( 159 )
NETGEN_2D_Parameters_1.SetCheckChartBoundary( 96 )
status = Mesh_1.RemoveHypothesis(NETGEN_3D_Parameters_1,duanban)
isDone = Mesh_1.Compute()
NETGEN_2D_Parameters_1.SetMaxSize( 10 )
NETGEN_2D_Parameters_1.SetMinSize( 4 )
NETGEN_2D_Parameters_1.SetGrowthRate( 0.15 )
NETGEN_2D_Parameters_1.SetNbSegPerRadius( 10 )
NETGEN_2D_Parameters_1.SetWorstElemMeasure( 159 )
NETGEN_2D_Parameters_1.SetCheckChartBoundary( 96 )
isDone = Mesh_1.Compute()
NETGEN_2D_Parameters_1.SetMaxSize( 8 )
NETGEN_2D_Parameters_1.SetWorstElemMeasure( 159 )
NETGEN_2D_Parameters_1.SetCheckChartBoundary( 96 )
NETGEN_3D = Mesh_1.Tetrahedron(geom=duanban)
NETGEN_3D_Parameters_1_1 = NETGEN_3D.Parameters()
NETGEN_3D_Parameters_1_1.SetMaxSize( 6 )
NETGEN_3D_Parameters_1_1.SetMinSize( 1 )
NETGEN_3D_Parameters_1_1.SetOptimize( 1 )
NETGEN_3D_Parameters_1_1.SetFineness( 3 )
NETGEN_3D_Parameters_1_1.SetCheckOverlapping( 0 )
NETGEN_3D_Parameters_1_1.SetElemSizeWeight( 1.36807e-311 )
NETGEN_3D_Parameters_1_1.SetCheckChartBoundary( 96 )
#Mesh_1.GetMesh().RemoveSubMesh( smeshObj_8 ) ### smeshObj_8 has not been yet created
NETGEN_3D_Parameters_1.SetCheckChartBoundary( 96 )
NETGEN_1D_2D_3D_1 = Mesh_1.Tetrahedron(algo=smeshBuilder.NETGEN_1D2D3D,geom=duanban)
mesh_duanban = NETGEN_1D_2D_3D_1.GetSubMesh()
status = Mesh_1.AddHypothesis(NETGEN_3D_Parameters_1,duanban)
isDone = Mesh_1.Compute()

#　yelengban
NETGEN_1D_2D_1 = Mesh_1.Triangle(algo=smeshBuilder.NETGEN_1D2D,geom=yelengban)
yelengban2d = NETGEN_1D_2D_1.Parameters()
yelengban2d.SetSecondOrder( 0 )
yelengban2d.SetOptimize( 1 )
yelengban2d.SetFineness( 5 )
yelengban2d.SetGrowthRate( 0.2 )
yelengban2d.SetNbSegPerEdge( 1 )
yelengban2d.SetChordalError( -1 )
yelengban2d.SetChordalErrorEnabled( 0 )
yelengban2d.SetUseSurfaceCurvature( 1 )
yelengban2d.SetFuseEdges( 1 )
yelengban2d.SetUseDelauney( 0 )
yelengban2d.SetQuadAllowed( 0 )
yelengban2d.SetElemSizeWeight( 0.3 )
yelengban2d.SetNbSurfOptSteps( 5 )
yelengban2d.SetMaxSize( 14 )
yelengban2d.SetNbSegPerRadius( 18 )
yelengban2d.SetMinSize( 2 )
yelengban2d.SetWorstElemMeasure( 154 )
yelengban2d.SetCheckChartBoundary( 208 )

NETGEN_3D_1 = Mesh_1.Tetrahedron(geom=yelengban)
yelengban3d = NETGEN_3D_1.Parameters()
yelengban3d.SetMaxSize( 4 )
yelengban3d.SetMinSize( 0.75 )
yelengban3d.SetOptimize( 1 )
yelengban3d.SetFineness( 3 )
yelengban3d.SetNbVolOptSteps( 4 )
yelengban3d.SetCheckOverlapping( 0 )
yelengban3d.SetElemSizeWeight( 1.02905e-311 )
yelengban3d.SetCheckChartBoundary( 208 )
# fluid
NETGEN_1D_2D_2 = Mesh_1.Triangle(algo=smeshBuilder.NETGEN_1D2D, geom=fluid)
fluid2D = NETGEN_1D_2D_2.Parameters()
fluid2D.SetMaxSize( 14 )
fluid2D.SetMinSize( 2 )
fluid2D.SetSecondOrder( 0 )
fluid2D.SetOptimize( 1 )
fluid2D.SetFineness( 5 )
fluid2D.SetGrowthRate( 0.2 )
fluid2D.SetNbSegPerEdge( 1 )
fluid2D.SetNbSegPerRadius( 18 )
fluid2D.SetChordalError( -1 )
fluid2D.SetChordalErrorEnabled( 0 )
fluid2D.SetUseSurfaceCurvature( 1 )
fluid2D.SetElemSizeWeight( 0.3 )
fluid2D.SetNbSurfOptSteps( 5 )
fluid2D.SetFuseEdges( 1 )
fluid2D.SetUseDelauney( 0 )
fluid2D.SetQuadAllowed( 0 )
fluid2D.SetWorstElemMeasure( 154 )
fluid2D.SetCheckChartBoundary( 208 )
NETGEN_3D_2 = Mesh_1.Tetrahedron(geom=fluid)
fluid3d = NETGEN_3D_2.Parameters()
fluid3d.SetMaxSize( 4 )
fluid3d.SetMinSize( 0.75 )
fluid3d.SetOptimize( 1 )
fluid3d.SetFineness( 3 )
fluid3d.SetNbVolOptSteps( 4 )
fluid3d.SetCheckOverlapping( 0 )
fluid3d.SetElemSizeWeight( 1.02905e-311 )
fluid3d.SetCheckChartBoundary( 208 )

interface_duanban_cell_1 = Mesh_1.GroupOnGeom(interface_duanban_cell,'interface_duanban_cell',SMESH.FACE)
interface_plate_fluid_1 = Mesh_1.GroupOnGeom(interface_plate_fluid,'interface_plate_fluid',SMESH.FACE)
interface_fluid_platete_1 = Mesh_1.GroupOnGeom(interface_fluid_platete,'interface_fluid_platete',SMESH.FACE)
aNodeConnectivityNumber000001E49B6472C0 = aFilterManager.CreateNodeConnectivityNumber()
aAspectRatio3D000001E49B6440D0 = aFilterManager.CreateAspectRatio3D()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.EDGE,SMESH.FT_FreeFaces,'=',0)
aCriteria.append(aCriterion)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polyhedra)
aCriteria.append(aCriterion)
Body_Fitting_Parameters_1.SetSizeThreshold( 4 )
Body_Fitting_Parameters_1.SetToAddEdges( 1 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '15' ], [ 0, 1 ], 0 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '10' ], [ 0, 1 ], 1 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '25' ], [ 0, 1 ], 2 )
Body_Fitting_Parameters_1.SetSizeThreshold( 6 )
Body_Fitting_Parameters_1.SetToAddEdges( 1 )
Body_Fitting_Parameters_1.SetToCreateFaces( 1 )
Body_Fitting_Parameters_1.SetToConsiderInternalFaces( 1 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '15' ], [ 0, 1 ], 0 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '10' ], [ 0, 1 ], 1 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '25' ], [ 0, 1 ], 2 )
isDone = Mesh_1.Compute()
aFilterLibrary000001E49D6E2820 = aFilterManager.LoadLibrary('C:/Users/DELL/FilterLib.xml')
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.FACE,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polygon,SMESH.FT_Undefined,SMESH.FT_Undefined,5.92879e-323); aCriterion.Precision = 32762
aCriteria.append(aCriterion)
aFilterLibrary000001E49D6E2820.Add('FaceFilter_3',aFilter000001E49D698C40)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.FACE,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polygon)
aCriteria.append(aCriterion)
aFilterLibrary000001E49D6E2820.Copy('FaceFilter_3')
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.FACE,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polygon)
aCriteria.append(aCriterion)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polyhedra)
aCriteria.append(aCriterion)
aFilter000001E49D64A5C0 = aFilterManager.CreateFilter()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polyhedra,SMESH.FT_Undefined,SMESH.FT_Undefined,1.0285e-311)
aCriteria.append(aCriterion)
aFilter000001E49D64A5C0 = aFilterManager.CreateFilter()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polyhedra,SMESH.FT_Undefined,SMESH.FT_Undefined,1.0285e-311)
aCriteria.append(aCriterion)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polyhedra)
aCriteria.append(aCriterion)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polyhedra)
aCriteria.append(aCriterion)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polyhedra,SMESH.FT_Undefined,SMESH.FT_Undefined,1.02829e-311)
aCriteria.append(aCriterion)
try:
  Mesh_1.ExportUNV( r'E:/project_simulation/energy_container/container_V1/cell_simple_V1/Mesh_1.unv', 0 )
  pass
except:
  print('ExportUNV() failed. Invalid file name?')
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.EDGE,SMESH.FT_FreeFaces,'=',0)
aCriteria.append(aCriterion)
aEqualVolumes000001E4B3B9AEB0 = aFilterManager.CreateEqualVolumes()
try:
  Mesh_1.ExportUNV( r'E:/project_simulation/energy_container/container_V1/cell_simple_V1/Mesh_1.unv', 0 )
  pass
except:
  print('ExportUNV() failed. Invalid file name?')
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.EDGE,SMESH.FT_FreeFaces,'=',0)
aCriteria.append(aCriterion)
theNbElems = Mesh_1.Evaluate(pack_simple5)
cell1_1 = Mesh_1.GroupOnGeom(cell1,'Solid',SMESH.VOLUME)
cell1_1.SetName( 'cell1' )
cell2_1 = Mesh_1.GroupOnGeom(cell2,'Solid',SMESH.VOLUME)
cell2_1.SetName( 'cell2' )
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1 ] = Mesh_1.GetGroups()
#Mesh_1.GetMesh().RemoveSubMesh( smeshObj_9 ) ### smeshObj_9 has not been yet created
Body_Fitting_Parameters_2 = smesh.CreateHypothesis('CartesianParameters3D')
Body_Fitting_Parameters_2.SetSizeThreshold( 4 )
Body_Fitting_Parameters_2.SetToAddEdges( 0 )
Body_Fitting_Parameters_2.SetGridSpacing( [ '39.0863' ], [ 0, 1 ], 0 )
Body_Fitting_Parameters_2.SetGridSpacing( [ '39.0863' ], [ 0, 1 ], 1 )
Body_Fitting_Parameters_2.SetGridSpacing( [ '39.0863' ], [ 0, 1 ], 2 )
Cartesian_3D_3 = Mesh_1.BodyFitted(geom=cell1)
mesh_cell1 = Cartesian_3D_3.GetSubMesh()
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1 ] = Mesh_1.GetGroups()
Cartesian_3D_4 = Mesh_1.BodyFitted(geom=cell2)
isDone = Mesh_1.Compute()
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1 ] = Mesh_1.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polyhedra)
aCriteria.append(aCriterion)
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1 ] = Mesh_1.GetGroups()
interface_cell2_cell1_1 = Mesh_1.GroupOnGeom(interface_cell2_cell1,'interface_cell2_cell1',SMESH.FACE)
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_Volume3D,SMESH.FT_LessThan,0)
aCriteria.append(aCriterion)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_Volume3D,SMESH.FT_LessThan,0)
aCriteria.append(aCriterion)
Body_Fitting_Parameters_1.SetSizeThreshold( 6 )
Body_Fitting_Parameters_1.SetToAddEdges( 1 )
Body_Fitting_Parameters_1.SetToCreateFaces( 0 )
Body_Fitting_Parameters_1.SetToConsiderInternalFaces( 0 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '15' ], [ 0, 1 ], 0 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '10' ], [ 0, 1 ], 1 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '25' ], [ 0, 1 ], 2 )
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
Body_Fitting_Parameters_1.SetSizeThreshold( 6 )
Body_Fitting_Parameters_1.SetToAddEdges( 1 )
Body_Fitting_Parameters_1.SetToUseThresholdForInternalFaces( 0 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '15' ], [ 0, 1 ], 0 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '10' ], [ 0, 1 ], 1 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '25' ], [ 0, 1 ], 2 )
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polyhedra)
aCriteria.append(aCriterion)
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_EntityType,SMESH.FT_Undefined,SMESH.Entity_Polyhedra)
aCriteria.append(aCriterion)
Body_Fitting_Parameters_1.SetSizeThreshold( 6 )
Body_Fitting_Parameters_1.SetToAddEdges( 1 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '15' ], [ 0, 1 ], 0 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '10' ], [ 0, 1 ], 1 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '25' ], [ 0, 1 ], 2 )
Body_Fitting_Parameters_1.SetSizeThreshold( 6 )
Body_Fitting_Parameters_1.SetToAddEdges( 1 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '15' ], [ 0, 1 ], 0 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '10' ], [ 0, 1 ], 1 )
Body_Fitting_Parameters_1.SetGridSpacing( [ '25' ], [ 0, 1 ], 2 )
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(Cartesian_3D,cell1)
NETGEN_1D_2D_3 = Mesh_1.Triangle(algo=smeshBuilder.NETGEN_1D2D,geom=cell1)
PolyhedronPerSolid_3D = Mesh_1.Polyhedron(geom=cell1)
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(PolyhedronPerSolid_3D,cell1)
Hexa_3D = Mesh_1.Hexahedron(algo=smeshBuilder.Hexa,geom=cell1)
Renumber_1 = Hexa_3D.Renumber()
Renumber_1.SetBlocksOrientation([  ])
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(Hexa_3D,cell1)
cell_1 = NETGEN_1D_2D_3.Parameters()
cell_1.SetSecondOrder( 0 )
cell_1.SetOptimize( 1 )
cell_1.SetFineness( 5 )
cell_1.SetNbSegPerEdge( 1 )
cell_1.SetNbSegPerRadius( 12 )
cell_1.SetChordalError( -1 )
cell_1.SetChordalErrorEnabled( 0 )
cell_1.SetUseSurfaceCurvature( 1 )
cell_1.SetElemSizeWeight( 0.3 )
cell_1.SetNbSurfOptSteps( 5 )
cell_1.SetFuseEdges( 1 )
cell_1.SetUseDelauney( 0 )
cell_1.SetQuadAllowed( 0 )
NETGEN_3D_3 = Mesh_1.Tetrahedron(geom=cell1)
status = Mesh_1.RemoveHypothesis(Renumber_1,cell1)
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
cell_1.SetMinSize( 5 )
cell_1.SetGrowthRate( 0.2 )
cell3d = NETGEN_3D_3.Parameters()
cell3d.SetMinSize( 4 )
cell3d.SetOptimize( 1 )
cell3d.SetFineness( 3 )
cell3d.SetNbVolOptSteps( 5 )
cell3d.SetCheckOverlapping( 0 )
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
cell3d.SetMaxSize( 12 )
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
cell_1.SetMaxSize( 12 )
cell_1.SetWorstElemMeasure( 2 )
cell_1.SetCheckChartBoundary( 128 )
cell3d.SetElemSizeWeight( 1.05492e-311 )
cell3d.SetCheckChartBoundary( 128 )
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(Cartesian_3D,cell2)
NETGEN_1D_2D_4 = Mesh_1.Triangle(algo=smeshBuilder.NETGEN_1D2D,geom=cell2)
status = Mesh_1.AddHypothesis(cell_1,cell2)
NETGEN_3D_4 = Mesh_1.Tetrahedron(geom=cell2)
status = Mesh_1.AddHypothesis(cell3d,cell2)
[ duanban_1, yelengban_1, fluid_1, guoliuyuanjian_1, inlet_1, outlet_1, interface_cell_duanban_1, interface_cell1_cell2_1, interface_bar1_cell_1, interface_cell1_bar1_1, interface_cell2_bar1_1, interface_plate_cell_1, interface_cell1_plate_1, interface_cell2_plate_1, interface_duanban_cell_1, interface_plate_fluid_1, interface_fluid_platete_1, cell1_1, cell2_1, interface_cell2_cell1_1 ] = Mesh_1.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.FACE,SMESH.FT_Skew,SMESH.FT_MoreThan,80)
aCriteria.append(aCriterion)
isDone = Mesh_1.Compute()
mesh_yelengban = NETGEN_1D_2D_1.GetSubMesh()
mesh_fluid = NETGEN_1D_2D_2.GetSubMesh()
mesh_cell2 = Cartesian_3D_4.GetSubMesh()

## some objects were removed
aStudyBuilder = salome.myStudy.NewBuilder()
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_2))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_3))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_6))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_1))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_4))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_5))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)

## Set names of Mesh objects
smesh.SetName(Cartesian_3D.GetAlgorithm(), 'Cartesian_3D')
smesh.SetName(interface_bar1_cell_1, 'interface_bar1_cell')
smesh.SetName(NETGEN_1D_2D.GetAlgorithm(), 'NETGEN 1D-2D')
smesh.SetName(interface_cell1_bar1_1, 'interface_cell1_bar1')
smesh.SetName(NETGEN_1D_2D_3D.GetAlgorithm(), 'NETGEN 1D-2D-3D')
smesh.SetName(PolyhedronPerSolid_3D.GetAlgorithm(), 'PolyhedronPerSolid_3D')
smesh.SetName(Body_Fitting_Parameters_1, 'Body Fitting Parameters_1')
smesh.SetName(NETGEN_3D.GetAlgorithm(), 'NETGEN 3D')
smesh.SetName(yuanjian_para, 'yuanjian_para')
smesh.SetName(Hexa_3D.GetAlgorithm(), 'Hexa_3D')
smesh.SetName(NETGEN_3D_Parameters_1_1, 'NETGEN 3D Parameters_1')
smesh.SetName(NETGEN_3D_Parameters_1, 'NETGEN 3D Parameters_1')
smesh.SetName(NETGEN_2D_Parameters_1, 'NETGEN 2D Parameters_1')
smesh.SetName(inlet_1, 'inlet')
smesh.SetName(outlet_1, 'outlet')
smesh.SetName(yelengban2d, 'yelengban2d')
smesh.SetName(interface_cell_duanban_1, 'interface_cell_duanban')
smesh.SetName(yelengban3d, 'yelengban3d')
smesh.SetName(interface_cell1_cell2_1, 'interface_cell1_cell2')
smesh.SetName(Mesh_1.GetMesh(), 'Mesh_1')
smesh.SetName(mesh_yuanjian, 'mesh_yuanjian')
smesh.SetName(mesh_fluid, 'mesh_fluid')
smesh.SetName(mesh_yelengban, 'mesh_yelengban')
smesh.SetName(mesh_duanban, 'mesh_duanban')
smesh.SetName(cell2_1, 'cell2')
smesh.SetName(cell1_1, 'cell1')
smesh.SetName(interface_plate_cell_1, 'interface_plate_cell')
smesh.SetName(interface_cell2_bar1_1, 'interface_cell2_bar1')
smesh.SetName(interface_cell2_plate_1, 'interface_cell2_plate')
smesh.SetName(guoliuyuanjian_1, 'guoliuyuanjian')
smesh.SetName(Body_Fitting_Parameters_2, 'Body Fitting Parameters_2')
smesh.SetName(interface_cell1_plate_1, 'interface_cell1_plate')
smesh.SetName(fluid_1, 'fluid')
smesh.SetName(interface_plate_fluid_1, 'interface_plate_fluid')
smesh.SetName(fluid3d, 'fluid3d')
smesh.SetName(interface_duanban_cell_1, 'interface_duanban_cell')
smesh.SetName(fluid2D, 'fluid2D')
smesh.SetName(yelengban_1, 'yelengban')
smesh.SetName(cell3d, 'cell3d')
smesh.SetName(interface_cell2_cell1_1, 'interface_cell2_cell1')
smesh.SetName(duanban_1, 'duanban')
smesh.SetName(cell_1, 'cell')
smesh.SetName(interface_fluid_platete_1, 'interface_fluid_platete')
smesh.SetName(Renumber_1, 'Renumber_1')
smesh.SetName(mesh_cell2, 'mesh_cell2')
smesh.SetName(mesh_cell1, 'mesh_cell1')


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser()
